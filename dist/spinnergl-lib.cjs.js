"use strict";var st=Object.defineProperty;var rt=(p,t,s)=>t in p?st(p,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):p[t]=s;var c=(p,t,s)=>rt(p,typeof t!="symbol"?t+"":t,s);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const it=`#version 300 es

in vec3 aPosition;
in vec4 aColor;
in vec2 aUv;

out vec2 vUv;
out vec4 vColor;

uniform mat4 mvpMatrix;

void main(void){
    vColor = aColor;
    vUv = aUv;
    gl_Position = mvpMatrix * vec4(aPosition, 1.0);
}`,nt=Object.freeze(Object.defineProperty({__proto__:null,default:it},Symbol.toStringTag,{value:"Module"})),ot=`#version 300 es
precision highp float;

in vec4 vColor;
in vec2 vUv;

out vec4 outputColor;

void main(void){
    outputColor = vColor;
}`,at=Object.freeze(Object.defineProperty({__proto__:null,default:ot},Symbol.toStringTag,{value:"Module"}));class H{constructor(t,s,e){c(this,"gl");c(this,"location");this.gl=t,this.location=t.getAttribLocation(s,e),this.location===-1&&console.error(`Failed to get the storage location of ${e}`)}setAttributeBuffer(t,s,e,r){this.location!==-1&&(this.gl.vertexAttribPointer(this.location,t,s,!1,e,r),this.gl.enableVertexAttribArray(this.location))}}class G{constructor(t,s,e){c(this,"gl");c(this,"location");this.gl=t,this.location=t.getUniformLocation(s,e),this.location===null&&console.error(`Failed to get the storage location of ${e}`)}setUniform(t,s){if(this.location!==null)switch(s){case"1f":this.gl.uniform1f(this.location,t);break;case"1fv":this.gl.uniform1fv(this.location,t);break;case"1i":this.gl.uniform1i(this.location,t);break;case"1iv":this.gl.uniform1iv(this.location,t);break;case"2f":this.gl.uniform2f(this.location,t,t);break;case"2fv":this.gl.uniform2fv(this.location,t);break;case"2i":this.gl.uniform2i(this.location,t,t);break;case"2iv":this.gl.uniform2iv(this.location,t);break;case"3f":this.gl.uniform3f(this.location,t,t,t);break;case"3fv":this.gl.uniform3fv(this.location,t);break;case"3i":this.gl.uniform3i(this.location,t,t,t);break;case"3iv":this.gl.uniform3iv(this.location,t);break;case"4f":this.gl.uniform4f(this.location,t,t,t,t);break;case"4fv":this.gl.uniform4fv(this.location,t);break;case"4i":this.gl.uniform4i(this.location,t,t,t,t);break;case"4iv":this.gl.uniform4iv(this.location,t);break;case"Matrix2fv":this.gl.uniformMatrix2fv(this.location,!1,t);break;case"Matrix3fv":this.gl.uniformMatrix3fv(this.location,!1,t);break;case"Matrix4fv":this.gl.uniformMatrix4fv(this.location,!1,t);break;default:throw new Error("Unknown uniform type!!")}}}class B{constructor(t,s,e){c(this,"gl");c(this,"program");c(this,"vertexShader");c(this,"fragmentShader");c(this,"attributes",new Map);c(this,"uniforms",new Map);this.gl=t,this.program=this.createProgram(s,e)}use(){this.gl.useProgram(this.program)}getProgram(){return this.program}getVertexShader(){return this.gl.getShaderSource(this.vertexShader)}getFragmentShader(){return this.gl.getShaderSource(this.fragmentShader)}getAttribute(t){return this.attributes.has(t)||this.attributes.set(t,new H(this.gl,this.program,t)),this.attributes.get(t)}getUniform(t){return this.uniforms.has(t)||this.uniforms.set(t,new G(this.gl,this.program,t)),this.uniforms.get(t)}setUniform(t,s){this.getUniform(t).setUniform(s.getUniformValues(),s.getUniformType())}createProgram(t,s){const e=this.gl.createProgram();if(this.vertexShader=this.compileShader(t,"vert"),this.fragmentShader=this.compileShader(s,"frag"),this.gl.attachShader(e,this.vertexShader),this.gl.attachShader(e,this.fragmentShader),this.gl.linkProgram(e),this.gl.getProgramParameter(e,this.gl.LINK_STATUS))return this.gl.useProgram(e),console.log("Create program success!!"),e;throw alert(this.gl.getProgramInfoLog(e)),new Error("Cannot create program!!")}compileShader(t,s){let e=this.createShader(s);if(this.gl.shaderSource(e,t),this.gl.compileShader(e),!this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS))throw console.log(this.gl.getShaderInfoLog(e)),new Error("Cannot compile shader!!");return e}createShader(t){switch(t){case"vert":return this.gl.createShader(this.gl.VERTEX_SHADER);case"frag":return this.gl.createShader(this.gl.FRAGMENT_SHADER);default:throw new Error("Unknown type shader!!")}}}class K{constructor(t){c(this,"gl");c(this,"shaderProgramCache",new Map);c(this,"shaderProgramKey",new Set);this.gl=t}getShaderProgram(t){if(!this.shaderProgramKey.has(t))throw new Error(`Common program with key ${t} not found`);return this.shaderProgramCache.get(t)}async loadShaderFromPath(t,s){var o;const e=await this.loadShader(t),r=await this.loadShader(s);let i=(o=s.split("/").pop())==null?void 0:o.split(".").shift(),n=new B(this.gl,e,r);this.shaderProgramCache.set(i,n),this.shaderProgramKey.add(i),console.log("loadShaderFromPath done"),console.log(this.shaderProgramCache)}async loadCommonShaders(){const t=Object.assign({"../src/webgl/shader/default.vert":nt}),s=Object.assign({"../src/webgl/shader/default.frag":at}),e=new Map,r=new Map;Object.entries(t).forEach(([i,n])=>{var u;const o=n.default,a=(u=i.split("/").pop())==null?void 0:u.split(".").shift();e.set(a,o),this.shaderProgramKey.add(a)}),Object.entries(s).forEach(([i,n])=>{var u;const o=n.default,a=(u=i.split("/").pop())==null?void 0:u.split(".").shift();r.set(a,o),this.shaderProgramKey.add(a)});for(const i of this.shaderProgramKey){console.log(i);let n=e.get(i),o=r.get(i);if(!n||!o){console.warn(`Shader pair incomplete for key: ${i}`);continue}let a=new B(this.gl,n,o);this.shaderProgramCache.set(i,a)}console.log("loadCommonShaders done"),console.log(this.shaderProgramCache)}async loadShader(t){try{return await(await fetch(t)).text()}catch(s){throw console.error(s),new Error("Cannot load shader!!")}}}class W{constructor(t){c(this,"gl");this.gl=this.initializeWebGL2RenderingContext(t)}getWebGL2RenderingContext(){return this.gl}clearColor(t){this.gl.clearColor(t.red,t.green,t.blue,t.alpha),this.gl.clearDepth(1),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)}resizeCanvasToDisplaySize(t){const s=t.clientWidth,e=t.clientHeight,r=t.width!==s||t.height!==e;return r&&(t.width=s,t.height=e),r}setViewport(t){this.resizeCanvasToDisplaySize(t),this.gl.viewport(0,0,t.width,t.height)}initializeWebGL2RenderingContext(t){const s=t.getContext("webgl2");if(s==null)throw new Error("Not Support WebGL2!!");return s}}class ct{constructor(t){c(this,"canvas");c(this,"webglUtility");c(this,"gl");c(this,"shaderLoader");c(this,"scene");this.canvas=document.getElementById("webgl-canvas"),this.webglUtility=new W(this.canvas),this.gl=this.webglUtility.getWebGL2RenderingContext(),this.shaderLoader=new K(this.gl),this.scene=t}async start(){await this.preload(),this.setup(),this.scene.setUpdate(this.update.bind(this)),this.scene.setDraw(this.draw.bind(this)),this.scene.start()}async preload(){await this.shaderLoader.loadCommonShaders()}}const X={EPSILON:1e-6},V={PI:Math.PI,PI_2:Math.PI*2,RAD_TO_DEG:180/Math.PI,DEG_TO_RAD:Math.PI/180};class h{static degreesToRadians(t){return V.DEG_TO_RAD*t}static radiansToDegrees(t){return t*V.RAD_TO_DEG}static clamp(t,s,e){return Math.max(Math.min(t,e),s)}static saturate(t){return Math.max(Math.min(t,1),0)}static sin(t){const s=Math.sin(t);return h.roundToZero(s)}static cos(t){const s=Math.cos(t);return h.roundToZero(s)}static tan(t){const s=Math.tan(t);return h.roundToZero(s)}static acos(t){const s=Math.acos(t);return h.roundToZero(s)}static atan2(t,s){const e=Math.atan2(t,s);return h.roundToZero(e)}static roundToZero(t){return Math.abs(t)<X.EPSILON?0:t}}class T{constructor(t,s,e,r=255){c(this,"r");c(this,"g");c(this,"b");c(this,"a");this.r=h.clamp(t,0,255),this.g=h.clamp(s,0,255),this.b=h.clamp(e,0,255),this.a=h.clamp(r,0,255)}get red(){return this.r}get green(){return this.g}get blue(){return this.b}get alpha(){return this.a}translateTo01(){const t=Number.parseFloat((this.r/255).toFixed(3)),s=Number.parseFloat((this.g/255).toFixed(3)),e=Number.parseFloat((this.b/255).toFixed(3)),r=Number.parseFloat((this.a/255).toFixed(3));return new D(t,s,e,r)}translateToColorCode(){const t=s=>s.toString(16).padStart(2,"0").toUpperCase();return`#${t(this.r)}${t(this.g)}${t(this.b)}`}}class D{constructor(t,s,e,r=1){c(this,"r");c(this,"g");c(this,"b");c(this,"a");this.r=h.clamp(t,0,1),this.g=h.clamp(s,0,1),this.b=h.clamp(e,0,1),this.a=h.clamp(r,0,1)}get red(){return this.r}get green(){return this.g}get blue(){return this.b}get alpha(){return this.a}get toRGBArray(){return new Float32Array([this.r,this.g,this.b])}translateTo255(){const t=Math.round(this.r*255),s=Math.round(this.g*255),e=Math.round(this.b*255),r=Math.round(this.a*255);return new T(t,s,e,r)}}const ht={RED:new D(1,0,0),GREEN:new D(0,1,0),BLUE:new D(0,0,1),WHITE:new D(1,1,1),BLACK:new D(0,0,0)},Y={COLOR_EMPTY:new T(0,0,0,0),COLOR_SUBARU:new T(174,180,156,255),COLOR_NOCTCHILL:new T(56,77,152,255),COLOR_TORU:new T(80,208,208,255),COLOR_MADOKA:new T(190,30,62,255),COLOR_KOITO:new T(121,103,195,255),COLOR_HINANA:new T(255,198,57,255),COLOR_HARUKI:new T(234,215,164,255),COLOR_CHINA:new T(246,139,31,255),COLOR_SENA:new T(246,174,84,255),COLOR_LILJA:new T(234,253,255,255),COLOR_SUMIKA:new T(124,252,0,255)},lt={COLOR_EMPTY:"#000000",COLOR_SUBARU:"#aeb49c",COLOR_NOCTCHILL:"#384d98",COLOR_TORU:"#50d0d0",COLOR_MADOKA:"#be1e3e",COLOR_KOITO:"#7967c3",COLOR_HINANA:"#ffc639",COLOR_HARUKI:"#ead7a4",COLOR_CHINA:"#f68b1f",COLOR_SENA:"#f6ae54",COLOR_LILJA:"#eafdff",COLOR_SUMIKA:"#7cfc00"};class ut{static hexToColor255(t){const e=/^#([0-9A-Fa-f]{6})$/.exec(t);if(!e)return Y.COLOR_EMPTY;let r=e[1];const i=parseInt(r.slice(0,2),16),n=parseInt(r.slice(2,4),16),o=parseInt(r.slice(4,6),16);return new T(i,n,o)}static hexToColor01(t){return this.hexToColor255(t).translateTo01()}}class R{constructor(t){c(this,"components");this.components=t}get values(){return this.components}get size(){return this.components.length}get(t){return this.components[t]}}class I extends R{constructor(t,s){super(new Float32Array([t,s]))}set x(t){this.components[0]=t}set y(t){this.components[1]=t}get x(){return this.components[0]}get y(){return this.components[1]}create(t=0,s=0){return new I(t,s)}min(t,s){let e=s??this.create();return e=this.length()<t.length()?this:t,e}max(t,s){let e=s??this.create();return e=t.length()<this.length()?this:t,e}add(t,s){let e=s??this.create();return e.x=this.x+t.x,e.y=this.y+t.y,e}sub(t,s){let e=s??this.create();return e.x=this.x-t.x,e.y=this.y-t.y,e}multiply(t,s){let e=s??this.create();return e.x=this.x*t,e.y=this.y*t,e}div(t,s){let e=s??this.create();return t==0||(e.x=this.x/t,e.y=this.y/t),e}setLength(t,s){let e=s??this.create();return e=this.normalize().multiply(t,e),e}limit(t,s){let e=s??this.create();return this.length()<t?this:(e=this.setLength(t,e),e)}normalize(t){let s=t??this.create();const e=this.length();return s=this.div(e),s}calcDistance(t){return this.sub(t).length()}calcAngle(t){const s=this.dot(t),e=this.length(),r=t.length();if(e==0||r==0)throw new Error("Vector length is zero. Cannot calculate!");const i=s/(e*r);return h.acos(i)}dot(t){return this.values.reduce((e,r,i)=>e+r*t.values[i],0)}length(){return Math.sqrt(this.values.reduce((t,s)=>t+Math.pow(s,2),0))}lerp(t,s,e){if(s>=0)return this;if(s<=1)return t;let r=e??this.create();const i=this.multiply(1-s),n=t.multiply(s);return r=i.add(n,r),r}clone(){return new I(this.x,this.y)}heading2D(){return h.atan2(this.y,this.x)}}class C extends R{constructor(t,s,e){super(new Float32Array([t,s,e]))}set x(t){this.components[0]=t}set y(t){this.components[1]=t}set z(t){this.components[2]=t}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}create(t=0,s=0,e=0){return new C(t,s,e)}min(t,s){let e=s??this.create();return e=this.length()<t.length()?this:t,e}max(t,s){let e=s??this.create();return e=t.length()<this.length()?this:t,e}add(t,s){let e=s??this.create();return e.x=this.x+t.x,e.y=this.y+t.y,e.z=this.z+t.z,e}sub(t,s){let e=s??this.create();return e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z,e}multiply(t,s){let e=s??this.create();return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e}div(t,s){let e=s??this.create();return t==0||(e.x=this.x/t,e.y=this.y/t,e.z=this.z/t),e}setLength(t,s){let e=s??this.create();return e=this.normalize().multiply(t,e),e}limit(t,s){let e=s??this.create();return this.length()<t?this:(e=this.setLength(t,e),e)}normalize(t){let s=t??this.create();const e=this.length();return s=this.div(e),s}calcDistance(t){return this.sub(t).length()}calcAngle(t){const s=this.dot(t),e=this.length(),r=t.length();if(e==0||r==0)throw new Error("Vector length is zero. Cannot calculate!");const i=s/(e*r);return h.acos(i)}dot(t){return this.values.reduce((e,r,i)=>e+r*t.values[i],0)}length(){return Math.sqrt(this.values.reduce((t,s)=>t+Math.pow(s,2),0))}lerp(t,s,e){if(s>=0)return this;if(s<=1)return t;let r=e??this.create();const i=this.multiply(1-s),n=t.multiply(s);return r=i.add(n,r),r}clone(){return new C(this.x,this.y,this.z)}cross(t,s){let e=s??this.create();return e.x=this.y*t.z-this.z*t.y,e.y=this.z*t.x-this.x*t.z,e.z=this.x*t.y-this.y*t.x,e}heading3D(){const t=h.atan2(this.z,Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))),s=h.atan2(this.y,this.x);return[t,s]}}class P extends R{constructor(t,s,e,r){super(new Float32Array([t,s,e,r]))}set x(t){this.components[0]=t}set y(t){this.components[1]=t}set z(t){this.components[2]=t}set w(t){this.components[3]=t}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}get w(){return this.components[3]}create(t=0,s=0,e=0,r=0){return new P(t,s,e,r)}min(t,s){let e=s??this.create();return e=this.length()<t.length()?this:t,e}max(t,s){let e=s??this.create();return e=t.length()<this.length()?this:t,e}add(t,s){let e=s??this.create();return e.x=this.x+t.x,e.y=this.y+t.y,e.z=this.z+t.z,e.w=this.w+t.w,e}sub(t,s){let e=s??this.create();return e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z,e.w=this.w-t.w,e}multiply(t,s){let e=s??this.create();return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e.w=this.w*t,e}div(t,s){let e=s??this.create();return t==0||(e.x=this.x/t,e.y=this.y/t,e.z=this.z/t,e.w=this.w/t),e}setLength(t,s){let e=s??this.create();return e=this.normalize().multiply(t,e),e}limit(t,s){let e=s??this.create();return this.length()<t?this:(e=this.setLength(t,e),e)}normalize(t){let s=t??this.create();const e=this.length();return s=this.div(e),s}calcDistance(t){return this.sub(t).length()}calcAngle(t){const s=this.dot(t),e=this.length(),r=t.length();if(e==0||r==0)throw new Error("Vector length is zero. Cannot calculate!");const i=s/(e*r);return h.acos(i)}dot(t){return this.values.reduce((e,r,i)=>e+r*t.values[i],0)}length(){return Math.sqrt(this.values.reduce((t,s)=>t+Math.pow(s,2),0))}lerp(t,s,e){if(s>=0)return this;if(s<=1)return t;let r=e??this.create();const i=this.multiply(1-s),n=t.multiply(s);return r=i.add(n,r),r}clone(){return new P(this.x,this.y,this.z,this.w)}}const F={AXIS2DX:new C(1,0,0),AXIS2DY:new C(0,1,0),AXIS2DZ:new C(0,0,1)},Z={2:I,3:C,4:P};class O{constructor(t,s,e=0){c(this,"dimensionNum");c(this,"data");this.dimensionNum=t,this.data=s?new Float32Array(s):new Float32Array(t*t).fill(e)}get(t,s){return this.data[this.dimensionNum*s+t]}set(t,s,e){this.data[this.dimensionNum*s+t]=e}get col(){return this.dimensionNum}get row(){return this.dimensionNum}get size(){return this.dimensionNum}get elementSize(){return this.dimensionNum*this.dimensionNum}toArray(){return this.data}}class M extends O{constructor(t){super(2,t)}identity(){return new M(Float32Array.of(1,0,0,1))}add(t,s){const e=this.data,r=t.data,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]+r[0],i[1]=e[1]+r[1],i[2]=e[2]+r[2],i[3]=e[3]+r[3],s??new M(i)}sub(t,s){const e=this.data,r=t.data,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],i[3]=e[3]-r[3],s??new M(i)}multiply(t,s){const e=s??new M(new Float32Array(this.elementSize));if(t instanceof O)for(let r=0;r<this.row;r++)for(let i=0;i<t.col;i++){let n=0;for(let o=0;o<this.col;o++)n+=this.get(r,o)*t.get(o,i);e.set(r,i,n)}else for(let r=0;r<this.row;r++)for(let i=0;i<this.col;i++)e.set(r,i,this.get(r,i)*t);return e}div(t,s){const e=this.data,r=t,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]/r,i[1]=e[1]/r,i[2]=e[2]/r,i[3]=e[3]/r,s??new M(i)}transpose(){const t=new M(new Float32Array(this.elementSize));for(let s=0;s<this.row;s++)for(let e=0;e<this.col;e++)t.set(e,s,this.get(s,e));return t}inverse(){const t=this.get(0,0),s=this.get(0,1),e=this.get(1,0),r=this.get(1,1),i=t*r-s*e,n=new M;if(i==0)return n;const o=1/i;return n.set(0,0,r*o),n.set(0,1,-s*o),n.set(1,0,-e*o),n.set(1,1,t*o),n}clone(){return new M(this.data)}fillNumber(t){this.data.fill(t)}}class E extends O{constructor(t){super(3,t)}identity(){return new E(Float32Array.of(1,0,0,0,1,0,0,0,1))}add(t,s){const e=this.data,r=t.data,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]+r[0],i[1]=e[1]+r[1],i[2]=e[2]+r[2],i[3]=e[3]+r[3],i[4]=e[4]+r[4],i[5]=e[5]+r[5],i[6]=e[6]+r[6],i[7]=e[7]+r[7],i[8]=e[8]+r[8],s??new E(i)}sub(t,s){const e=this.data,r=t.data,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],i[3]=e[3]-r[3],i[4]=e[4]-r[4],i[5]=e[5]-r[5],i[6]=e[6]-r[6],i[7]=e[7]-r[7],i[8]=e[8]-r[8],s??new E(i)}multiply(t,s){const e=s??new E(new Float32Array(this.elementSize));if(t instanceof O)for(let r=0;r<this.row;r++)for(let i=0;i<t.col;i++){let n=0;for(let o=0;o<this.col;o++)n+=this.get(r,o)*t.get(o,i);e.set(r,i,n)}else for(let r=0;r<this.row;r++)for(let i=0;i<this.col;i++)e.set(r,i,this.get(r,i)*t);return e}div(t,s){const e=this.data,r=t,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]/r,i[1]=e[1]/r,i[2]=e[2]/r,i[3]=e[3]/r,i[4]=e[4]/r,i[5]=e[5]/r,i[6]=e[6]/r,i[7]=e[7]/r,i[8]=e[8]/r,s??new E(i)}transpose(){const t=new E(new Float32Array(this.elementSize));for(let s=0;s<this.row;s++)for(let e=0;e<this.col;e++)t.set(e,s,this.get(s,e));return t}inverse(){const t=this.get(0,0),s=this.get(0,1),e=this.get(0,2),r=this.get(1,0),i=this.get(1,1),n=this.get(1,2),o=this.get(2,0),a=this.get(2,1),u=this.get(2,2),g=t*i*u+s*n*o+e*r*a-e*i*o-s*r*u-t*n*a,l=new E;if(g==0)return l;const d=1/g;return l.set(0,0,(i*u-n*a)*d),l.set(0,1,-(s*u-e*a)*d),l.set(0,2,(s*n-e*i)*d),l.set(1,0,-(r*u-n*o)*d),l.set(1,1,(t*u-e*o)*d),l.set(1,2,-(t*n-e*r)*d),l.set(2,0,(r*a-i*o)*d),l.set(2,1,-(t*a-s*o)*d),l.set(2,2,(t*i-s*r)*d),l}clone(){return new E(this.data)}fillNumber(t){this.data.fill(t)}normalMatrix(t){return new E(Float32Array.of(t.get(0,0),t.get(0,1),t.get(0,2),t.get(1,0),t.get(1,1),t.get(1,2),t.get(2,0),t.get(2,1),t.get(2,2))).inverse()}}class w{static min(t,s){const e=w.length(t),r=w.length(s);return e<=r?t:s}static max(t,s){const e=w.length(t),r=w.length(s);return e>=r?t:s}static add(t,s){if(t.size!=s.size)throw new Error("Vector lengths not equal! Cannot Additive!");const e=t.values.map((r,i)=>r+s.values[i]);return w.convertVector(t.size,e)}static sub(t,s){if(t.size!=s.size)throw new Error("Vector lengths not equal! Cannot Additive!");const e=s.values.map((r,i)=>r-t.values[i]);return w.convertVector(t.size,e)}static calcDistance(t,s){const e=w.sub(t,s);return w.length(e)}static calcAngle(t,s){if(t.size!=s.size)throw new Error("Vector lengths not equal! Cannot Additive!");const e=w.dot(t,s),r=w.length(t),i=w.length(s);if(r==0||i==9)throw new Error("Vector length is zero. Cannot calculate!");const n=e/(r*i);return h.acos(n)}static dot(t,s){if(t.size!=s.size)throw new Error("Vector lengths not equal! Cannot Additive!");return t.values.reduce((r,i,n)=>r+i*s.values[n],0)}static multiply(t,s){const e=t.values.map(r=>r*s);return w.convertVector(t.size,e)}static divide(t,s){if(s==0)throw new Error("Cannot divide because b is zero!!");const e=t.values.map(r=>r/s);return w.convertVector(t.size,e)}static limit(t,s){return t.length()<s?t:w.setLength(t,s)}static setLength(t,s){const e=w.normalize(t);return w.multiply(e,s)}static normalize(t){const s=w.length(t);return w.divide(t,s)}static length(t){return Math.sqrt(t.values.reduce((e,r)=>e+Math.pow(r,2),0))}static lerp(t,s,e){if(e==0)return t;if(e==1)return s;const r=w.multiply(t,1-e),i=w.multiply(s,e);return w.add(r,i)}static cross(t,s){const e=t.y*s.z-t.z*s.y,r=t.z*s.x-t.x*s.z,i=t.x*s.y-t.y*s.x;return new C(e,r,i)}static heading2D(t){return h.atan2(t.y,t.x)}static heading3D(t){const s=h.atan2(t.z,Math.sqrt(Math.pow(t.x,2)+Math.pow(t.y,2))),e=h.atan2(t.y,t.x);return[s,e]}static convertVector(t,s){const e=Z[t];if(!e)throw new Error(`Unsupported vector size: ${t}`);return new e(...s)}}class b extends O{constructor(t){super(4,t)}identity(){return new b(Float32Array.of(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))}add(t,s){const e=this.data,r=t.data,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]+r[0],i[1]=e[1]+r[1],i[2]=e[2]+r[2],i[3]=e[3]+r[3],i[4]=e[4]+r[4],i[5]=e[5]+r[5],i[6]=e[6]+r[6],i[7]=e[7]+r[7],i[8]=e[8]+r[8],i[9]=e[9]+r[9],i[10]=e[10]+r[10],i[11]=e[11]+r[11],i[12]=e[12]+r[12],i[13]=e[13]+r[13],i[14]=e[14]+r[14],i[15]=e[15]+r[15],s??new b(i)}sub(t,s){const e=this.data,r=t.data,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],i[3]=e[3]-r[3],i[4]=e[4]-r[4],i[5]=e[5]-r[5],i[6]=e[6]-r[6],i[7]=e[7]-r[7],i[8]=e[8]-r[8],i[9]=e[9]-r[9],i[10]=e[10]-r[10],i[11]=e[11]-r[11],i[12]=e[12]-r[12],i[13]=e[13]-r[13],i[14]=e[14]-r[14],i[15]=e[15]-r[15],s??new b(i)}multiply(t,s){const e=s??new b;if(t instanceof O)for(let r=0;r<this.row;r++)for(let i=0;i<t.col;i++){let n=0;for(let o=0;o<this.col;o++)n+=this.get(r,o)*t.get(o,i);e.set(r,i,n)}else for(let r=0;r<this.row;r++)for(let i=0;i<this.col;i++)e.set(r,i,this.get(r,i)*t);return e}div(t,s){const e=this.data,r=t,i=s?s.data:new Float32Array(this.elementSize);return i[0]=e[0]/r,i[1]=e[1]/r,i[2]=e[2]/r,i[3]=e[3]/r,i[4]=e[4]/r,i[5]=e[5]/r,i[6]=e[6]/r,i[7]=e[7]/r,i[8]=e[8]/r,i[9]=e[9]/r,i[10]=e[10]/r,i[11]=e[11]/r,i[12]=e[12]/r,i[13]=e[13]/r,i[14]=e[14]/r,i[15]=e[15]/r,s??new b(i)}transpose(){const t=new b(new Float32Array(this.elementSize));for(let s=0;s<this.row;s++)for(let e=0;e<this.col;e++)t.set(e,s,this.get(s,e));return t}inverse(){const t=this.get(0,0),s=this.get(0,1),e=this.get(0,2),r=this.get(0,3),i=this.get(1,0),n=this.get(1,1),o=this.get(1,2),a=this.get(1,3),u=this.get(2,0),g=this.get(2,1),l=this.get(2,2),d=this.get(2,3),y=this.get(3,0),m=this.get(3,1),v=this.get(3,2),x=this.get(3,3),j=t*n*l*x+t*o*d*m+t*a*g*v-t*a*l*m-t*o*g*x-t*n*d*v-s*i*l*x-e*i*d*m-r*i*g*v+r*i*l*m+e*i*g*x+s*i*d*v+s*o*u*x+e*a*u*m+r*n*u*v-r*o*u*m-e*n*u*x-s*a*u*v-s*o*d*y-e*a*g*y-r*n*l*y+r*o*g*y+e*n*d*y+s*a*l*y,A=new b;if(j==0)return A;const S=1/j;return A.set(0,0,(n*l*x+o*d*m+a*g*v-a*l*m-o*g*x-n*d*v)*S),A.set(0,1,(-s*l*x-e*d*m-r*g*v+r*l*m+e*g*x+s*d*v)*S),A.set(0,2,(s*o*x+e*a*m+r*n*v-r*o*m-e*n*x-s*a*v)*S),A.set(0,3,(-s*o*d-e*a*g-r*n*l+r*o*g+e*n*d+s*a*l)*S),A.set(1,0,(-i*l*x-o*d*y-a*u*v+a*l*y+o*u*x+i*d*v)*S),A.set(1,1,(t*l*x+e*d*y+r*u*v-r*l*y-e*u*x-t*d*v)*S),A.set(1,2,(-t*o*x-e*a*y-r*i*v+r*o*y+e*i*x+t*a*v)*S),A.set(1,3,(t*o*d+e*a*u+r*i*l-r*o*u-e*i*d-t*a*l)*S),A.set(2,0,(i*g*x+n*d*y+a*u*m-a*g*y-n*u*x-i*d*m)*S),A.set(2,1,(-t*g*x-s*d*y-r*u*m+r*g*y+s*u*x+t*d*m)*S),A.set(2,2,(t*n*x+s*a*y+r*i*m-r*n*y-s*i*x-t*a*m)*S),A.set(2,3,(-t*n*d-s*a*u-r*i*g+r*n*u+s*i*d+t*a*g)*S),A.set(3,0,(-i*g*v-n*l*y-o*u*m+o*g*y+n*u*v+i*l*m)*S),A.set(3,1,(t*g*v+s*l*y+e*u*m-e*g*y-s*u*v-t*l*m)*S),A.set(3,2,(-t*n*v-s*o*y-e*i*m+e*n*y+s*i*v+t*o*m)*S),A.set(3,3,(t*n*l+s*o*u+e*i*g-e*n*u-s*i*l-t*o*g)*S),A}clone(){return new b(this.data)}fillNumber(t){this.data.fill(t)}orthographic(t,s,e,r,i,n,o){const a=s-t,u=e-r,g=n-i;if(a==0)throw new Error("Right and Left are same value. Cannot calculate orthographic.");if(u==0)throw new Error("Top and bottom are same value. Cannot calculate orthographic.");if(g==0)throw new Error("Far and Near are same value. Cannot calculate orthographic.");const l=1/a,d=1/u,y=1/g,m=o||new b;return m.set(0,0,2*l),m.set(1,1,2*d),m.set(2,2,-2*y),m.set(3,3,1),m.set(0,3,-(s+t)*l),m.set(1,3,-(e+r)*d),m.set(2,3,-(n+i)*y),m}perspective(t,s,e,r,i,n){if(e==0)throw new Error("Height is zero!");const o=s/e,a=i-r;if(a==0)throw new Error("depth is zero!");const u=h.degreesToRadians(t),g=h.tan(u/2),l=n||new b;return l.set(0,0,1/(g*o)),l.set(1,1,1/g),l.set(2,2,-(i+r)/a),l.set(2,3,-(2*i*r)/a),l.set(3,2,-1),l}lookAt(t,s,e,r){const i=w.normalize(w.sub(s,t)),n=w.normalize(w.cross(i,e)),o=w.normalize(w.cross(n,i));let a=r||new b;return a=a.identity(),a.set(0,0,n.x),a.set(1,0,n.y),a.set(2,0,n.z),a.set(0,1,o.x),a.set(1,1,o.y),a.set(2,1,o.z),a.set(0,2,-i.x),a.set(1,2,-i.y),a.set(2,2,-i.z),a.set(0,3,-w.dot(n,t)),a.set(1,3,-w.dot(o,t)),a.set(2,3,-w.dot(i,t)),a}translate2D(t,s){let e=s||new b;const r=this.identity();return r.set(0,3,t.x),r.set(1,3,t.y),e=r.multiply(this),e}translate3D(t,s){let e=s||new b;const r=this.identity();return r.set(0,3,t.x),r.set(1,3,t.y),r.set(2,3,t.z),e=r.multiply(this),e}rotateX(t,s){return this.rotate3D(t,F.AXIS2DX,s)}rotateY(t,s){return this.rotate3D(t,F.AXIS2DY,s)}rotateZ(t,s){return this.rotate3D(t,F.AXIS2DZ,s)}rotate2D(t,s){return this.rotateZ(t,s)}rotate3D(t,s,e){let r=e||new b;return r=this.createRotateMatrix3D(t,s).multiply(this),r}scale2D(t,s,e){let r=e||new b;return r=this.createScaleMatrix2D(t,s).multiply(this),r}scale3D(t,s,e,r){let i=r||new b;return i=this.createScaleMatrix3D(t,s,e).multiply(this),i}createRotateMatrix3D(t,s){const e=this.identity();return s==F.AXIS2DX&&(e.set(1,1,h.cos(t)),e.set(1,2,-h.sin(t)),e.set(2,1,h.sin(t)),e.set(2,2,h.cos(t))),s==F.AXIS2DY&&(e.set(0,0,h.cos(t)),e.set(0,2,h.sin(t)),e.set(2,0,-h.sin(t)),e.set(2,2,h.cos(t))),s==F.AXIS2DZ&&(e.set(0,0,h.cos(t)),e.set(0,1,-h.sin(t)),e.set(1,0,h.sin(t)),e.set(1,1,h.cos(t))),e}createScaleMatrix2D(t,s){const e=this.identity();return e.set(0,0,t),e.set(1,1,s),e}createScaleMatrix3D(t,s,e){const r=this.identity();return r.set(0,0,t),r.set(1,1,s),r.set(2,2,e),r}}const $={2:M,3:E,4:b};class f{static create(t,s,e,r){return new U(t,s,e,r)}static createFromEuler(t,s,e){const r=f.create(0,-h.sin(s*.5),0,h.cos(s*.5)),i=f.create(-h.sin(t*.5),0,0,h.cos(t*.5)),n=f.create(0,0,-h.sin(e*.5),h.cos(e*.5)),o=f.multiply(r,i);return f.multiply(o,n)}static createFromAxisAndRadians(t,s){const e=w.normalize(t),r=s*.5,i=h.sin(r);return f.create(e.x*i,e.y*i,e.z*i,h.cos(r))}static identity(){return new U(0,0,0,1)}static add(t,s){const e=t.x+s.x,r=t.y+s.y,i=t.z+s.z,n=t.w+s.w;return f.create(e,r,i,n)}static sub(t,s){const e=t.x-s.x,r=t.y-s.y,i=t.z-s.z,n=t.w-s.w;return f.create(e,r,i,n)}static multiply(t,s){const e=t.w*s.w-t.x*s.x-t.y*s.y-t.z*s.z,r=t.w*s.x+t.x*s.w+t.y*s.z-t.z*s.y,i=t.w*s.y+t.y*s.w+t.z*s.x-t.x*s.z,n=t.w*s.z+t.z*s.w+t.x*s.y-t.y*s.x;return f.create(r,i,n,e)}static scale(t,s){const e=t.x*s,r=t.y*s,i=t.z*s,n=t.w*s;return f.create(e,r,i,n)}static dot(t,s){return t.x*s.x+t.y*s.y+t.z*s.z+t.w*s.w}static conjugate(t){return f.create(-t.x,-t.y,-t.z,t.w)}static normalize(t){const s=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w);if(s==0)throw new Error("Zero length quaternion. Cannot normalize!!");const e=1/s;return f.scale(t,e)}static inverse(t){const s=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;if(s==0)throw new Error("Zero length quaternion. Cannot inverse!!");const e=1/s,r=f.conjugate(t);return f.scale(r,e)}static rotateVector(t,s){const e=f.toQuaternion(s),r=f.inverse(t),i=f.multiply(t,e),n=f.multiply(i,r);return new C(n.x,n.y,n.z)}static slerp(t,s,e){let r=f.dot(t,s);r<0&&(s=f.scale(s,-1),r*=-1);const i=Math.acos(r),n=h.sin(i);if(n==0){const o=f.scale(t,1-e),a=f.scale(s,e);return f.add(o,a)}else{const o=f.scale(t,h.sin(i*(1-e))/n),a=f.scale(s,h.sin(i*e)/n);return f.add(o,a)}}static toQuaternion(t){return f.create(t.x,t.y,t.z,0)}}class U{constructor(t,s,e,r){c(this,"components");this.components=new Float32Array([t,s,e,r])}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}get w(){return this.components[3]}toMatrix(){const t=new b;let s=t.identity();const e=f.rotateVector(this,F.AXIS2DX),r=f.rotateVector(this,F.AXIS2DY),i=f.rotateVector(this,F.AXIS2DZ);return s.set(0,0,e.x),s.set(0,1,e.y),s.set(0,2,e.z),s.set(0,0,r.x),s.set(0,1,r.y),s.set(0,2,r.z),s.set(0,0,i.x),s.set(0,1,i.y),s.set(0,2,i.z),t}toEuler(){const t=this.toMatrix(),s=Math.atan2(t.get(0,2),t.get(2,2)),e=Math.asin(-t.get(2,0)),r=Math.atan2(t.get(2,1),t.get(2,2));return{pitch:s,yaw:e,roll:r}}}class L{static identity22(){return new M().identity()}static identity33(){return new E().identity()}static identity44(){return new b().identity()}static add(t,s){if(!this.checkSizeEqual(t,s))throw new Error("Not Equal Matrix Dimension. Cannot Calculate!");const e=this.createMatrixInstance(t.size);return t.add(s,e),e}static sub(t,s){if(!this.checkSizeEqual(t,s))throw new Error("Not Equal Matrix Dimension. Cannot Calculate!");const e=this.createMatrixInstance(t.size);return t.sub(s,e),e}static multiply(t,s){const e=this.createMatrixInstance(t.size);if(s instanceof O){if(t.col!=s.row)throw new Error("Not Equal A Row Number and B Col Number. Cannot Multiply!");t.multiply(s,e)}else t.multiply(s,e);return e}static div(t,s){if(s==0)throw new Error("b is zero. Cannot Divide!");const e=this.createMatrixInstance(t.size);return t.div(s,e),e}static translate2D(t,s){return t.translate2D(s)}static translate3D(t,s){return t.translate3D(s)}static rotate2D(t,s){return t.rotate2D(s)}static rotate3D(t,s,e){return t.rotate3D(s,e)}static scale2D(t,s,e){return t.scale2D(s,e)}static scale3D(t,s,e,r){return t.scale3D(s,e,r)}static transpose(t){return t.transpose()}static inverse(t){return t.inverse()}static orthographic(t,s,e,r,i,n){let o=new b;return o=o.orthographic(t,s,e,r,i,n,o),o}static perspective(t,s,e,r,i){let n=new b;return n=n.perspective(t,s,e,r,i,n),n}static lookAt(t,s,e){let r=new b;return r=r.lookAt(t,s,e,r),r}static checkSizeEqual(t,s){return t.col!=s.col||t.row!=s.row?(console.log(`col: ${t.col},${s.col}`),console.log(`row: ${t.row},${s.row}`),!1):!0}static createMatrixInstance(t){const s=$[t];if(!s)throw new Error("Unsupport matrix size");return new s}}class dt{constructor(t,s="float"){c(this,"values");c(this,"type");this.values=this.getValue(t),this.type=this.getType(t,s)}getUniformValues(){return this.values}getUniformType(){return this.type}getValue(t){if(typeof t=="number")return t;if(Array.isArray(t))return t;if(t instanceof O)return t.toArray();if(t instanceof R)return t.values;if(t instanceof Float32Array)return t;if(t instanceof Int32Array)return t;throw new Error("Invalid uniform values type")}getType(t,s){if(typeof t=="number")return this.isFloat(s),"1f";if(Array.isArray(t))switch(t.length){case 1:return this.isFloat(s)?"1fv":"1iv";case 2:return this.isFloat(s)?"2fv":"2iv";case 3:return this.isFloat(s)?"3fv":"3iv";case 4:return this.isFloat(s)?"4fv":"4iv";default:throw new Error("Invalid uniform values type")}else if(t instanceof R)switch(t.size){case 1:return this.isFloat(s)?"1fv":"1iv";case 2:return this.isFloat(s)?"2fv":"2iv";case 3:return this.isFloat(s)?"3fv":"3iv";case 4:return this.isFloat(s)?"4fv":"4iv";default:throw new Error("Invalid uniform values type")}else if(t instanceof O)switch(t.size){case 2:return"Matrix2fv";case 3:return"Matrix3fv";case 4:return"Matrix4fv";default:throw new Error("Invalid uniform values type")}else if(t instanceof Float32Array)switch(t.length){case 1:return"1fv";case 2:return"2fv";case 3:return"3fv";case 4:return"4fv";default:throw new Error("Invalid uniform values type")}else if(t instanceof Int32Array)switch(t.length){case 1:return"1iv";case 2:return"2iv";case 3:return"3iv";case 4:return"4iv";default:throw new Error("Invalid uniform values type")}else throw new Error("Invalid uniform values type")}isFloat(t){return t=="float"}}const z={aPosition:3,aColor:4,aUv:2};class q{constructor(t){c(this,"gl");c(this,"vao",null);c(this,"buffers");this.gl=t,this.buffers=new Map}addBuffer(t,s){this.buffers.set(t,s)}bindVao(){this.vao==null&&(this.vao=this.gl.createVertexArray()),this.gl.bindVertexArray(this.vao)}bind(){this.bindVao();for(const t of this.buffers.values())t.bind()}unbind(){this.unbindVao();for(const t of this.buffers.values())t.unbind()}unbindVao(){this.gl.bindVertexArray(null)}dispose(){for(const t of this.buffers.values())t.dispose();this.vao&&(this.gl.deleteVertexArray(this.vao),this.vao=null)}}class N{constructor(t){c(this,"gl");c(this,"buffer",null);this.gl=t,this.buffer=this.gl.createBuffer()}get BufferType(){return this.gl.ARRAY_BUFFER}}class J extends N{constructor(s,e,r,i=new Float32Array){super(s);c(this,"interleavedArray");this.interleavedArray=this.createInterleavedArray(e,r,i)}get BufferType(){return this.gl.ARRAY_BUFFER}bind(){this.gl.bindBuffer(this.BufferType,this.buffer)}unbind(){this.gl.bindBuffer(this.BufferType,null)}setData(){this.gl.bindBuffer(this.BufferType,this.buffer),this.gl.bufferData(this.BufferType,this.interleavedArray,this.gl.STATIC_DRAW)}dispose(){this.buffer&&(this.gl.deleteBuffer(this.buffer),this.buffer=null)}createInterleavedArray(s,e,r){const i=new Float32Array(s.length+e.length+r.length),n=s.length/z.aPosition,o=e.length/z.aColor;if(n!=o)throw new Error("Vertex array and color array must have the same length.");let a=0;for(let u=0;u<n;u++){const g=u*z.aPosition;i.set(s.subarray(g,g+z.aPosition),a),a+=z.aPosition;const l=u*z.aColor;if(i.set(e.subarray(l,l+z.aColor),a),a+=z.aColor,r.length==0)continue;const d=u*z.aUv;i.set(r.subarray(d,d+z.aUv),a),a+=z.aUv}return console.log(i),i}}class _ extends N{constructor(s,e){super(s);c(this,"indices");this.indices=e}get BufferType(){return this.gl.ELEMENT_ARRAY_BUFFER}bind(){this.gl.bindBuffer(this.BufferType,this.buffer)}unbind(){this.gl.bindBuffer(this.BufferType,null)}setData(){this.gl.bindBuffer(this.BufferType,this.buffer),this.gl.bufferData(this.BufferType,this.indices,this.gl.STATIC_DRAW)}dispose(){this.buffer&&(this.gl.deleteBuffer(this.buffer),this.buffer=null)}}class Q{constructor(t){c(this,"gl");c(this,"vao");c(this,"vertices");c(this,"color");c(this,"indices");this.gl=t,this.vao=new q(t),this.vertices=new Float32Array,this.color=new Float32Array,this.indices=new Int16Array}render(){this.vao.bind(),this.gl.drawElements(this.gl.TRIANGLES,this.indices.length,this.gl.UNSIGNED_SHORT,0),this.vao.unbind()}dispose(){this.vao.dispose()}}class gt extends Q{constructor(s,e=1,r=1){super(s);c(this,"uv");this.vertices=new Float32Array([-e*.5,-r*.5,0,e*.5,-r*.5,0,e*.5,r*.5,0,-e*.5,r*.5,0]),this.color=new Float32Array([1,0,0,1,0,1,0,1,0,0,1,1,1,1,1,1]),this.uv=new Float32Array([0,0,1,0,1,1,0,1]),this.indices=new Int16Array([0,1,2,0,2,3])}setUpBuffers(s){var n,o;this.vao.bindVao();const e=new J(this.gl,this.vertices,this.color,this.uv),r=new _(this.gl,this.indices);e.setData(),r.setData();const i=(z.aPosition+z.aColor+z.aUv)*Float32Array.BYTES_PER_ELEMENT;s.aPosition.setAttributeBuffer(z.aPosition,this.gl.FLOAT,i,0),(n=s.aColor)==null||n.setAttributeBuffer(z.aColor,this.gl.FLOAT,i,z.aPosition*Float32Array.BYTES_PER_ELEMENT),(o=s.aUv)==null||o.setAttributeBuffer(z.aUv,this.gl.FLOAT,i,(z.aPosition+z.aColor)*Float32Array.BYTES_PER_ELEMENT),this.vao.addBuffer("geometry",e),this.vao.addBuffer("index",r),e.unbind(),r.unbind(),this.vao.unbindVao()}}const k={Perspective:0,Orthography:1};class ft{constructor(t=k.Perspective,s={},e={}){c(this,"cameraType");c(this,"viewMatrix",L.identity44());c(this,"projectionMatrix",L.identity44());c(this,"position",new C(0,0,0));c(this,"rotation",new U(0,0,0,0));c(this,"near",1);c(this,"far",1);c(this,"fov",1);c(this,"viewportWidth",1);c(this,"viewportHeight",1);c(this,"up");c(this,"forward");this.cameraType=t,this.position=s.position??new C(0,0,-3),this.rotation=s.rotation??new U(0,0,0,1),this.near=s.near??.1,this.far=s.far??100,this.fov=s.fov??45,this.viewportWidth=s.viewportWidth??800,this.viewportHeight=s.viewportHeight??800,this.up=e.up??new C(0,1,0),this.forward=e.forward??new C(0,0,1),this.calculateProjectionMatrix(),this.calculateViewMatrix()}setPosition(t){this.position=t,this.calculateViewMatrix()}setRotation(t){this.rotation=t,this.calculateViewMatrix()}setViewport(t,s){if(s==0)throw new Error("Height is zero.");this.viewportWidth=t,this.viewportHeight=s,this.calculateProjectionMatrix()}setCameraType(t){this.cameraType=t,this.calculateProjectionMatrix()}getViewMatrix(){return this.viewMatrix}getProjectionMatrix(){return this.projectionMatrix}calculateViewMatrix(){const t=f.rotateVector(this.rotation,this.up),s=f.rotateVector(this.rotation,this.forward);this.viewMatrix=L.lookAt(this.position,this.position.add(s),t)}calculateProjectionMatrix(){this.cameraType==k.Perspective?this.calculatePerspectiveMatrix():this.calculateOrthographicMatrix()}calculatePerspectiveMatrix(){this.projectionMatrix=L.perspective(this.fov,this.viewportWidth,this.viewportHeight,this.near,this.far)}calculateOrthographicMatrix(){if(this.viewportHeight==0)throw new Error("Height is zero.");const t=this.viewportWidth/this.viewportHeight,s=1,e=s*t,r=-e,i=e,n=s,o=-1;this.projectionMatrix=L.orthographic(r,i,n,o,this.near,this.far)}}class tt{constructor(){c(this,"startTime");c(this,"elapsedTime");c(this,"timeScale");c(this,"frameCount");c(this,"deltaTime");c(this,"lastTime");this.startTime=performance.now(),this.elapsedTime=0,this.timeScale=1,this.frameCount=0,this.deltaTime=0,this.lastTime=0}update(){const t=performance.now();this.elapsedTime=(t-this.startTime)*this.timeScale/1e3,this.deltaTime=Math.max((t-this.lastTime)*this.timeScale/1e3,0),this.lastTime=t,this.frameCount++}setTimeScale(t){this.timeScale=t}getElapsedTime(){return this.elapsedTime}getDeltaTime(){return this.deltaTime}getFrameCount(){return this.frameCount}reset(){this.startTime=performance.now(),this.elapsedTime=0,this.timeScale=1,this.frameCount=0,this.deltaTime=0,this.lastTime=0}}class et{constructor(t){c(this,"shaderProgram");this.shaderProgram=t}use(){this.shaderProgram.use()}}class mt extends et{constructor(t){super(t)}setUniform(t){for(const s in t)this.shaderProgram.setUniform(s,t[s])}}class wt{constructor(){c(this,"clock");c(this,"isRunning");c(this,"updateFunction");c(this,"drawFunction");this.clock=new tt,this.isRunning=!1,this.updateFunction=()=>{},this.drawFunction=()=>{}}start(){this.isRunning||(this.clock.reset(),this.isRunning=!0,this.run())}stop(){this.isRunning&&(this.isRunning=!1)}reset(){this.clock.reset()}setUpdate(t){this.updateFunction=t}setDraw(t){this.drawFunction=t}get Clock(){return this.clock}run(){this.isRunning&&(this.clock.update(),this.updateObjects(),this.drawObjects(),requestAnimationFrame(()=>{this.run()}))}updateObjects(){this.updateFunction()}drawObjects(){this.drawFunction()}}function pt(){console.log("ライブラリが初期化されました")}exports.AttributeElementSize=z;exports.BaseApplication=ct;exports.BaseBuffer=N;exports.BaseMaterial=et;exports.Camera=ft;exports.CameraType=k;exports.Clock=tt;exports.Color=D;exports.Color255=T;exports.ColorUtility=ut;exports.DefaultColorConstants=ht;exports.DefaultValueConstants=X;exports.DefaultVectorConstants=F;exports.FragmentCanvasMaterial=mt;exports.Geometry=Q;exports.GeometryBuffer=J;exports.IndexBuffer=_;exports.MathUtility=h;exports.Matrix=O;exports.Matrix22=M;exports.Matrix33=E;exports.Matrix44=b;exports.MatrixCalculator=L;exports.MatrixClassAndSizePair=$;exports.MyColorCode=lt;exports.MyColorConstants255=Y;exports.Quaternion=U;exports.QuaternionCalculator=f;exports.Rectangle=gt;exports.Scene=wt;exports.ShaderAttribute=H;exports.ShaderLoader=K;exports.ShaderProgram=B;exports.ShaderUniform=G;exports.ShaderUniformValue=dt;exports.TrigonometricConstants=V;exports.Vector=R;exports.Vector2=I;exports.Vector3=C;exports.Vector4=P;exports.VectorCalculator=w;exports.VectorClassAndSizePair=Z;exports.VertexArray=q;exports.WebGLUtility=W;exports.initializeLibrary=pt;
