(function(u,O){typeof exports=="object"&&typeof module<"u"?O(exports):typeof define=="function"&&define.amd?define(["exports"],O):(u=typeof globalThis<"u"?globalThis:u||self,O(u.spinnergl={}))})(this,function(u){"use strict";var tt=Object.defineProperty;var et=(u,O,I)=>O in u?tt(u,O,{enumerable:!0,configurable:!0,writable:!0,value:I}):u[O]=I;var p=(u,O,I)=>et(u,typeof O!="symbol"?O+"":O,I);const O={EPSILON:1e-6},I={PI:Math.PI,PI_2:Math.PI*2,RAD_TO_DEG:180/Math.PI,DEG_TO_RAD:Math.PI/180};class a{static degreesToRadians(t){return I.DEG_TO_RAD*t}static radiansToDegrees(t){return t*I.RAD_TO_DEG}static clamp(t,s,e){return Math.max(Math.min(t,e),s)}static saturate(t){return Math.max(Math.min(t,1),0)}static sin(t){const s=Math.sin(t);return a.roundToZero(s)}static cos(t){const s=Math.cos(t);return a.roundToZero(s)}static tan(t){const s=Math.tan(t);return a.roundToZero(s)}static acos(t){const s=Math.acos(t);return a.roundToZero(s)}static atan2(t,s){const e=Math.atan2(t,s);return a.roundToZero(e)}static roundToZero(t){return Math.abs(t)<O.EPSILON?0:t}}class v{constructor(t,s,e,r=255){p(this,"r");p(this,"g");p(this,"b");p(this,"a");this.r=a.clamp(t,0,255),this.g=a.clamp(s,0,255),this.b=a.clamp(e,0,255),this.a=a.clamp(r,0,255)}get red(){return this.r}get green(){return this.g}get blue(){return this.b}get alpha(){return this.a}translateTo01(){const t=Number.parseFloat((this.r/255).toFixed(3)),s=Number.parseFloat((this.g/255).toFixed(3)),e=Number.parseFloat((this.b/255).toFixed(3)),r=Number.parseFloat((this.a/255).toFixed(3));return new T(t,s,e,r)}translateToColorCode(){const t=s=>s.toString(16).padStart(2,"0").toUpperCase();return`#${t(this.r)}${t(this.g)}${t(this.b)}`}}class T{constructor(t,s,e,r=1){p(this,"r");p(this,"g");p(this,"b");p(this,"a");this.r=a.clamp(t,0,1),this.g=a.clamp(s,0,1),this.b=a.clamp(e,0,1),this.a=a.clamp(r,0,1)}get red(){return this.r}get green(){return this.g}get blue(){return this.b}get alpha(){return this.a}get toRGBArray(){return new Float32Array([this.r,this.g,this.b])}translateTo255(){const t=Math.round(this.r*255),s=Math.round(this.g*255),e=Math.round(this.b*255),r=Math.round(this.a*255);return new v(t,s,e,r)}}const Z={RED:new T(1,0,0),GREEN:new T(0,1,0),BLUE:new T(0,0,1),WHITE:new T(1,1,1),BLACK:new T(0,0,0)},U={COLOR_EMPTY:new v(0,0,0,0),COLOR_SUBARU:new v(174,180,156,255),COLOR_NOCTCHILL:new v(56,77,152,255),COLOR_TORU:new v(80,208,208,255),COLOR_MADOKA:new v(190,30,62,255),COLOR_KOITO:new v(121,103,195,255),COLOR_HINANA:new v(255,198,57,255),COLOR_HARUKI:new v(234,215,164,255),COLOR_CHINA:new v(246,139,31,255),COLOR_SENA:new v(246,174,84,255),COLOR_LILJA:new v(234,253,255,255),COLOR_SUMIKA:new v(124,252,0,255)},$={COLOR_EMPTY:"#000000",COLOR_SUBARU:"#aeb49c",COLOR_NOCTCHILL:"#384d98",COLOR_TORU:"#50d0d0",COLOR_MADOKA:"#be1e3e",COLOR_KOITO:"#7967c3",COLOR_HINANA:"#ffc639",COLOR_HARUKI:"#ead7a4",COLOR_CHINA:"#f68b1f",COLOR_SENA:"#f6ae54",COLOR_LILJA:"#eafdff",COLOR_SUMIKA:"#7cfc00"};class G{static hexToColor255(t){const e=/^#([0-9A-Fa-f]{6})$/.exec(t);if(!e)return U.COLOR_EMPTY;let r=e[1];const n=parseInt(r.slice(0,2),16),i=parseInt(r.slice(2,4),16),o=parseInt(r.slice(4,6),16);return new v(n,i,o)}static hexToColor01(t){return this.hexToColor255(t).translateTo01()}}class N{constructor(t){p(this,"components");this.components=t}get values(){return this.components}get size(){return this.components.length}get(t){return this.components[t]}}class F extends N{constructor(t,s){super(new Float32Array([t,s]))}set x(t){this.components[0]=t}set y(t){this.components[1]=t}get x(){return this.components[0]}get y(){return this.components[1]}create(t=0,s=0){return new F(t,s)}min(t,s){let e=s??this.create();return e=this.length()<t.length()?this:t,e}max(t,s){let e=s??this.create();return e=t.length()<this.length()?this:t,e}add(t,s){let e=s??this.create();return e.x=this.x+t.x,e.y=this.y+t.y,e}sub(t,s){let e=s??this.create();return e.x=this.x-t.x,e.y=this.y-t.y,e}multiply(t,s){let e=s??this.create();return e.x=this.x*t,e.y=this.y*t,e}div(t,s){let e=s??this.create();return t==0||(e.x=this.x/t,e.y=this.y/t),e}setLength(t,s){let e=s??this.create();return e=this.normalize().multiply(t,e),e}limit(t,s){let e=s??this.create();return this.length()<t?this:(e=this.setLength(t,e),e)}normalize(t){let s=t??this.create();const e=this.length();return s=this.div(e),s}calcDistance(t){return this.sub(t).length()}calcAngle(t){const s=this.dot(t),e=this.length(),r=t.length();if(e==0||r==0)throw new Error("Vector length is zero. Cannot calculate!");const n=s/(e*r);return a.acos(n)}dot(t){return this.values.reduce((e,r,n)=>e+r*t.values[n],0)}length(){return Math.sqrt(this.values.reduce((t,s)=>t+Math.pow(s,2),0))}lerp(t,s,e){if(s>=0)return this;if(s<=1)return t;let r=e??this.create();const n=this.multiply(1-s),i=t.multiply(s);return r=n.add(i,r),r}clone(){return new F(this.x,this.y)}heading2D(){return a.atan2(this.y,this.x)}}class M extends N{constructor(t,s,e){super(new Float32Array([t,s,e]))}set x(t){this.components[0]=t}set y(t){this.components[1]=t}set z(t){this.components[2]=t}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}create(t=0,s=0,e=0){return new M(t,s,e)}min(t,s){let e=s??this.create();return e=this.length()<t.length()?this:t,e}max(t,s){let e=s??this.create();return e=t.length()<this.length()?this:t,e}add(t,s){let e=s??this.create();return e.x=this.x+t.x,e.y=this.y+t.y,e.z=this.z+t.z,e}sub(t,s){let e=s??this.create();return e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z,e}multiply(t,s){let e=s??this.create();return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e}div(t,s){let e=s??this.create();return t==0||(e.x=this.x/t,e.y=this.y/t,e.z=this.z/t),e}setLength(t,s){let e=s??this.create();return e=this.normalize().multiply(t,e),e}limit(t,s){let e=s??this.create();return this.length()<t?this:(e=this.setLength(t,e),e)}normalize(t){let s=t??this.create();const e=this.length();return s=this.div(e),s}calcDistance(t){return this.sub(t).length()}calcAngle(t){const s=this.dot(t),e=this.length(),r=t.length();if(e==0||r==0)throw new Error("Vector length is zero. Cannot calculate!");const n=s/(e*r);return a.acos(n)}dot(t){return this.values.reduce((e,r,n)=>e+r*t.values[n],0)}length(){return Math.sqrt(this.values.reduce((t,s)=>t+Math.pow(s,2),0))}lerp(t,s,e){if(s>=0)return this;if(s<=1)return t;let r=e??this.create();const n=this.multiply(1-s),i=t.multiply(s);return r=n.add(i,r),r}clone(){return new M(this.x,this.y,this.z)}cross(t,s){let e=s??this.create();return e.x=this.y*t.z-this.z*t.y,e.y=this.z*t.x-this.x*t.z,e.z=this.x*t.y-this.y*t.x,e}heading3D(){const t=a.atan2(this.z,Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))),s=a.atan2(this.y,this.x);return[t,s]}}class P extends N{constructor(t,s,e,r){super(new Float32Array([t,s,e,r]))}set x(t){this.components[0]=t}set y(t){this.components[1]=t}set z(t){this.components[2]=t}set w(t){this.components[3]=t}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}get w(){return this.components[3]}create(t=0,s=0,e=0,r=0){return new P(t,s,e,r)}min(t,s){let e=s??this.create();return e=this.length()<t.length()?this:t,e}max(t,s){let e=s??this.create();return e=t.length()<this.length()?this:t,e}add(t,s){let e=s??this.create();return e.x=this.x+t.x,e.y=this.y+t.y,e.z=this.z+t.z,e.w=this.w+t.w,e}sub(t,s){let e=s??this.create();return e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z,e.w=this.w-t.w,e}multiply(t,s){let e=s??this.create();return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e.w=this.w*t,e}div(t,s){let e=s??this.create();return t==0||(e.x=this.x/t,e.y=this.y/t,e.z=this.z/t,e.w=this.w/t),e}setLength(t,s){let e=s??this.create();return e=this.normalize().multiply(t,e),e}limit(t,s){let e=s??this.create();return this.length()<t?this:(e=this.setLength(t,e),e)}normalize(t){let s=t??this.create();const e=this.length();return s=this.div(e),s}calcDistance(t){return this.sub(t).length()}calcAngle(t){const s=this.dot(t),e=this.length(),r=t.length();if(e==0||r==0)throw new Error("Vector length is zero. Cannot calculate!");const n=s/(e*r);return a.acos(n)}dot(t){return this.values.reduce((e,r,n)=>e+r*t.values[n],0)}length(){return Math.sqrt(this.values.reduce((t,s)=>t+Math.pow(s,2),0))}lerp(t,s,e){if(s>=0)return this;if(s<=1)return t;let r=e??this.create();const n=this.multiply(1-s),i=t.multiply(s);return r=n.add(i,r),r}clone(){return new P(this.x,this.y,this.z,this.w)}}const E={AXIS2DX:new M(1,0,0),AXIS2DY:new M(0,1,0),AXIS2DZ:new M(0,0,1)},V={2:F,3:M,4:P};class R{constructor(t,s,e=0){p(this,"dimensionNum");p(this,"data");this.dimensionNum=t,this.data=s?new Float32Array(s):new Float32Array(t*t).fill(e)}get(t,s){return this.data[this.dimensionNum*s+t]}set(t,s,e){this.data[this.dimensionNum*s+t]=e}get col(){return this.dimensionNum}get row(){return this.dimensionNum}get size(){return this.dimensionNum}get elementSize(){return this.dimensionNum*this.dimensionNum}toArray(){return this.data}}class D extends R{constructor(t){super(2,t)}identity(){return new D(Float32Array.of(1,0,0,1))}add(t,s){const e=this.data,r=t.data,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]+r[0],n[1]=e[1]+r[1],n[2]=e[2]+r[2],n[3]=e[3]+r[3],s??new D(n)}sub(t,s){const e=this.data,r=t.data,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]-r[0],n[1]=e[1]-r[1],n[2]=e[2]-r[2],n[3]=e[3]-r[3],s??new D(n)}multiply(t,s){const e=s??new D(new Float32Array(this.elementSize));if(t instanceof R)for(let r=0;r<this.row;r++)for(let n=0;n<t.col;n++){let i=0;for(let o=0;o<this.col;o++)i+=this.get(r,o)*t.get(o,n);e.set(r,n,i)}else for(let r=0;r<this.row;r++)for(let n=0;n<this.col;n++)e.set(r,n,this.get(r,n)*t);return e}div(t,s){const e=this.data,r=t,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]/r,n[1]=e[1]/r,n[2]=e[2]/r,n[3]=e[3]/r,s??new D(n)}transpose(){const t=new D(new Float32Array(this.elementSize));for(let s=0;s<this.row;s++)for(let e=0;e<this.col;e++)t.set(e,s,this.get(s,e));return t}inverse(){const t=this.get(0,0),s=this.get(0,1),e=this.get(1,0),r=this.get(1,1),n=t*r-s*e,i=new D;if(n==0)return i;const o=1/n;return i.set(0,0,r*o),i.set(0,1,-s*o),i.set(1,0,-e*o),i.set(1,1,t*o),i}clone(){return new D(this.data)}fillNumber(t){this.data.fill(t)}}class L extends R{constructor(t){super(3,t)}identity(){return new L(Float32Array.of(1,0,0,0,1,0,0,0,1))}add(t,s){const e=this.data,r=t.data,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]+r[0],n[1]=e[1]+r[1],n[2]=e[2]+r[2],n[3]=e[3]+r[3],n[4]=e[4]+r[4],n[5]=e[5]+r[5],n[6]=e[6]+r[6],n[7]=e[7]+r[7],n[8]=e[8]+r[8],s??new L(n)}sub(t,s){const e=this.data,r=t.data,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]-r[0],n[1]=e[1]-r[1],n[2]=e[2]-r[2],n[3]=e[3]-r[3],n[4]=e[4]-r[4],n[5]=e[5]-r[5],n[6]=e[6]-r[6],n[7]=e[7]-r[7],n[8]=e[8]-r[8],s??new L(n)}multiply(t,s){const e=s??new L(new Float32Array(this.elementSize));if(t instanceof R)for(let r=0;r<this.row;r++)for(let n=0;n<t.col;n++){let i=0;for(let o=0;o<this.col;o++)i+=this.get(r,o)*t.get(o,n);e.set(r,n,i)}else for(let r=0;r<this.row;r++)for(let n=0;n<this.col;n++)e.set(r,n,this.get(r,n)*t);return e}div(t,s){const e=this.data,r=t,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]/r,n[1]=e[1]/r,n[2]=e[2]/r,n[3]=e[3]/r,n[4]=e[4]/r,n[5]=e[5]/r,n[6]=e[6]/r,n[7]=e[7]/r,n[8]=e[8]/r,s??new L(n)}transpose(){const t=new L(new Float32Array(this.elementSize));for(let s=0;s<this.row;s++)for(let e=0;e<this.col;e++)t.set(e,s,this.get(s,e));return t}inverse(){const t=this.get(0,0),s=this.get(0,1),e=this.get(0,2),r=this.get(1,0),n=this.get(1,1),i=this.get(1,2),o=this.get(2,0),c=this.get(2,1),h=this.get(2,2),m=t*n*h+s*i*o+e*r*c-e*n*o-s*r*h-t*i*c,l=new L;if(m==0)return l;const g=1/m;return l.set(0,0,(n*h-i*c)*g),l.set(0,1,-(s*h-e*c)*g),l.set(0,2,(s*i-e*n)*g),l.set(1,0,-(r*h-i*o)*g),l.set(1,1,(t*h-e*o)*g),l.set(1,2,-(t*i-e*r)*g),l.set(2,0,(r*c-n*o)*g),l.set(2,1,-(t*c-s*o)*g),l.set(2,2,(t*n-s*r)*g),l}clone(){return new L(this.data)}fillNumber(t){this.data.fill(t)}normalMatrix(t){return new L(Float32Array.of(t.get(0,0),t.get(0,1),t.get(0,2),t.get(1,0),t.get(1,1),t.get(1,2),t.get(2,0),t.get(2,1),t.get(2,2))).inverse()}}class d{static min(t,s){const e=d.length(t),r=d.length(s);return e<=r?t:s}static max(t,s){const e=d.length(t),r=d.length(s);return e>=r?t:s}static add(t,s){if(t.size!=s.size)throw new Error("Vector lengths not equal! Cannot Additive!");const e=t.values.map((r,n)=>r+s.values[n]);return d.convertVector(t.size,e)}static sub(t,s){if(t.size!=s.size)throw new Error("Vector lengths not equal! Cannot Additive!");const e=s.values.map((r,n)=>r-t.values[n]);return d.convertVector(t.size,e)}static calcDistance(t,s){const e=d.sub(t,s);return d.length(e)}static calcAngle(t,s){if(t.size!=s.size)throw new Error("Vector lengths not equal! Cannot Additive!");const e=d.dot(t,s),r=d.length(t),n=d.length(s);if(r==0||n==9)throw new Error("Vector length is zero. Cannot calculate!");const i=e/(r*n);return a.acos(i)}static dot(t,s){if(t.size!=s.size)throw new Error("Vector lengths not equal! Cannot Additive!");return t.values.reduce((r,n,i)=>r+n*s.values[i],0)}static multiply(t,s){const e=t.values.map(r=>r*s);return d.convertVector(t.size,e)}static divide(t,s){if(s==0)throw new Error("Cannot divide because b is zero!!");const e=t.values.map(r=>r/s);return d.convertVector(t.size,e)}static limit(t,s){return t.length()<s?t:d.setLength(t,s)}static setLength(t,s){const e=d.normalize(t);return d.multiply(e,s)}static normalize(t){const s=d.length(t);return d.divide(t,s)}static length(t){return Math.sqrt(t.values.reduce((e,r)=>e+Math.pow(r,2),0))}static lerp(t,s,e){if(e==0)return t;if(e==1)return s;const r=d.multiply(t,1-e),n=d.multiply(s,e);return d.add(r,n)}static cross(t,s){const e=t.y*s.z-t.z*s.y,r=t.z*s.x-t.x*s.z,n=t.x*s.y-t.y*s.x;return new M(e,r,n)}static heading2D(t){return a.atan2(t.y,t.x)}static heading3D(t){const s=a.atan2(t.z,Math.sqrt(Math.pow(t.x,2)+Math.pow(t.y,2))),e=a.atan2(t.y,t.x);return[s,e]}static convertVector(t,s){const e=V[t];if(!e)throw new Error(`Unsupported vector size: ${t}`);return new e(...s)}}class z extends R{constructor(t){super(4,t)}identity(){return new z(Float32Array.of(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))}add(t,s){const e=this.data,r=t.data,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]+r[0],n[1]=e[1]+r[1],n[2]=e[2]+r[2],n[3]=e[3]+r[3],n[4]=e[4]+r[4],n[5]=e[5]+r[5],n[6]=e[6]+r[6],n[7]=e[7]+r[7],n[8]=e[8]+r[8],n[9]=e[9]+r[9],n[10]=e[10]+r[10],n[11]=e[11]+r[11],n[12]=e[12]+r[12],n[13]=e[13]+r[13],n[14]=e[14]+r[14],n[15]=e[15]+r[15],s??new z(n)}sub(t,s){const e=this.data,r=t.data,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]-r[0],n[1]=e[1]-r[1],n[2]=e[2]-r[2],n[3]=e[3]-r[3],n[4]=e[4]-r[4],n[5]=e[5]-r[5],n[6]=e[6]-r[6],n[7]=e[7]-r[7],n[8]=e[8]-r[8],n[9]=e[9]-r[9],n[10]=e[10]-r[10],n[11]=e[11]-r[11],n[12]=e[12]-r[12],n[13]=e[13]-r[13],n[14]=e[14]-r[14],n[15]=e[15]-r[15],s??new z(n)}multiply(t,s){const e=s??new z;if(t instanceof R)for(let r=0;r<this.row;r++)for(let n=0;n<t.col;n++){let i=0;for(let o=0;o<this.col;o++)i+=this.get(r,o)*t.get(o,n);e.set(r,n,i)}else for(let r=0;r<this.row;r++)for(let n=0;n<this.col;n++)e.set(r,n,this.get(r,n)*t);return e}div(t,s){const e=this.data,r=t,n=s?s.data:new Float32Array(this.elementSize);return n[0]=e[0]/r,n[1]=e[1]/r,n[2]=e[2]/r,n[3]=e[3]/r,n[4]=e[4]/r,n[5]=e[5]/r,n[6]=e[6]/r,n[7]=e[7]/r,n[8]=e[8]/r,n[9]=e[9]/r,n[10]=e[10]/r,n[11]=e[11]/r,n[12]=e[12]/r,n[13]=e[13]/r,n[14]=e[14]/r,n[15]=e[15]/r,s??new z(n)}transpose(){const t=new z(new Float32Array(this.elementSize));for(let s=0;s<this.row;s++)for(let e=0;e<this.col;e++)t.set(e,s,this.get(s,e));return t}inverse(){const t=this.get(0,0),s=this.get(0,1),e=this.get(0,2),r=this.get(0,3),n=this.get(1,0),i=this.get(1,1),o=this.get(1,2),c=this.get(1,3),h=this.get(2,0),m=this.get(2,1),l=this.get(2,2),g=this.get(2,3),y=this.get(3,0),w=this.get(3,1),x=this.get(3,2),S=this.get(3,3),K=t*i*l*S+t*o*g*w+t*c*m*x-t*c*l*w-t*o*m*S-t*i*g*x-s*n*l*S-e*n*g*w-r*n*m*x+r*n*l*w+e*n*m*S+s*n*g*x+s*o*h*S+e*c*h*w+r*i*h*x-r*o*h*w-e*i*h*S-s*c*h*x-s*o*g*y-e*c*m*y-r*i*l*y+r*o*m*y+e*i*g*y+s*c*l*y,A=new z;if(K==0)return A;const b=1/K;return A.set(0,0,(i*l*S+o*g*w+c*m*x-c*l*w-o*m*S-i*g*x)*b),A.set(0,1,(-s*l*S-e*g*w-r*m*x+r*l*w+e*m*S+s*g*x)*b),A.set(0,2,(s*o*S+e*c*w+r*i*x-r*o*w-e*i*S-s*c*x)*b),A.set(0,3,(-s*o*g-e*c*m-r*i*l+r*o*m+e*i*g+s*c*l)*b),A.set(1,0,(-n*l*S-o*g*y-c*h*x+c*l*y+o*h*S+n*g*x)*b),A.set(1,1,(t*l*S+e*g*y+r*h*x-r*l*y-e*h*S-t*g*x)*b),A.set(1,2,(-t*o*S-e*c*y-r*n*x+r*o*y+e*n*S+t*c*x)*b),A.set(1,3,(t*o*g+e*c*h+r*n*l-r*o*h-e*n*g-t*c*l)*b),A.set(2,0,(n*m*S+i*g*y+c*h*w-c*m*y-i*h*S-n*g*w)*b),A.set(2,1,(-t*m*S-s*g*y-r*h*w+r*m*y+s*h*S+t*g*w)*b),A.set(2,2,(t*i*S+s*c*y+r*n*w-r*i*y-s*n*S-t*c*w)*b),A.set(2,3,(-t*i*g-s*c*h-r*n*m+r*i*h+s*n*g+t*c*m)*b),A.set(3,0,(-n*m*x-i*l*y-o*h*w+o*m*y+i*h*x+n*l*w)*b),A.set(3,1,(t*m*x+s*l*y+e*h*w-e*m*y-s*h*x-t*l*w)*b),A.set(3,2,(-t*i*x-s*o*y-e*n*w+e*i*y+s*n*x+t*o*w)*b),A.set(3,3,(t*i*l+s*o*h+e*n*m-e*i*h-s*n*l-t*o*m)*b),A}clone(){return new z(this.data)}fillNumber(t){this.data.fill(t)}orthographic(t,s,e,r,n,i,o){const c=s-t,h=e-r,m=i-n;if(c==0)throw new Error("Right and Left are same value. Cannot calculate orthographic.");if(h==0)throw new Error("Top and bottom are same value. Cannot calculate orthographic.");if(m==0)throw new Error("Far and Near are same value. Cannot calculate orthographic.");const l=1/c,g=1/h,y=1/m,w=o||new z;return w.set(0,0,2*l),w.set(1,1,2*g),w.set(2,2,-2*y),w.set(3,3,1),w.set(0,3,-(s+t)*l),w.set(1,3,-(e+r)*g),w.set(2,3,-(i+n)*y),w}perspective(t,s,e,r,n,i){if(e==0)throw new Error("Height is zero!");const o=s/e,c=n-r;if(c==0)throw new Error("depth is zero!");const h=a.degreesToRadians(t),m=a.tan(h/2),l=i||new z;return l.set(0,0,1/(m*o)),l.set(1,1,1/m),l.set(2,2,-(n+r)/c),l.set(2,3,-(2*n*r)/c),l.set(3,2,-1),l}lookAt(t,s,e,r){const n=d.normalize(d.sub(s,t)),i=d.normalize(d.cross(n,e)),o=d.normalize(d.cross(i,n));let c=r||new z;return c=c.identity(),c.set(0,0,i.x),c.set(1,0,i.y),c.set(2,0,i.z),c.set(0,1,o.x),c.set(1,1,o.y),c.set(2,1,o.z),c.set(0,2,-n.x),c.set(1,2,-n.y),c.set(2,2,-n.z),c.set(0,3,-d.dot(i,t)),c.set(1,3,-d.dot(o,t)),c.set(2,3,-d.dot(n,t)),c}translate2D(t,s){let e=s||new z;const r=this.identity();return r.set(0,3,t.x),r.set(1,3,t.y),e=r.multiply(this),e}translate3D(t,s){let e=s||new z;const r=this.identity();return r.set(0,3,t.x),r.set(1,3,t.y),r.set(2,3,t.z),e=r.multiply(this),e}rotateX(t,s){return this.rotate3D(t,E.AXIS2DX,s)}rotateY(t,s){return this.rotate3D(t,E.AXIS2DY,s)}rotateZ(t,s){return this.rotate3D(t,E.AXIS2DZ,s)}rotate2D(t,s){return this.rotateZ(t,s)}rotate3D(t,s,e){let r=e||new z;return r=this.createRotateMatrix3D(t,s).multiply(this),r}scale2D(t,s,e){let r=e||new z;return r=this.createScaleMatrix2D(t,s).multiply(this),r}scale3D(t,s,e,r){let n=r||new z;return n=this.createScaleMatrix3D(t,s,e).multiply(this),n}createRotateMatrix3D(t,s){const e=this.identity();return s==E.AXIS2DX&&(e.set(1,1,a.cos(t)),e.set(1,2,-a.sin(t)),e.set(2,1,a.sin(t)),e.set(2,2,a.cos(t))),s==E.AXIS2DY&&(e.set(0,0,a.cos(t)),e.set(0,2,a.sin(t)),e.set(2,0,-a.sin(t)),e.set(2,2,a.cos(t))),s==E.AXIS2DZ&&(e.set(0,0,a.cos(t)),e.set(0,1,-a.sin(t)),e.set(1,0,a.sin(t)),e.set(1,1,a.cos(t))),e}createScaleMatrix2D(t,s){const e=this.identity();return e.set(0,0,t),e.set(1,1,s),e}createScaleMatrix3D(t,s,e){const r=this.identity();return r.set(0,0,t),r.set(1,1,s),r.set(2,2,e),r}}const X={2:D,3:L,4:z};class f{static create(t,s,e,r){return new k(t,s,e,r)}static createFromEuler(t,s,e){const r=f.create(0,-a.sin(s*.5),0,a.cos(s*.5)),n=f.create(-a.sin(t*.5),0,0,a.cos(t*.5)),i=f.create(0,0,-a.sin(e*.5),a.cos(e*.5)),o=f.multiply(r,n);return f.multiply(o,i)}static createFromAxisAndRadians(t,s){const e=d.normalize(t),r=s*.5,n=a.sin(r);return f.create(e.x*n,e.y*n,e.z*n,a.cos(r))}static identity(){return new k(0,0,0,1)}static add(t,s){const e=t.x+s.x,r=t.y+s.y,n=t.z+s.z,i=t.w+s.w;return f.create(e,r,n,i)}static sub(t,s){const e=t.x-s.x,r=t.y-s.y,n=t.z-s.z,i=t.w-s.w;return f.create(e,r,n,i)}static multiply(t,s){const e=t.w*s.w-t.x*s.x-t.y*s.y-t.z*s.z,r=t.w*s.x+t.x*s.w+t.y*s.z-t.z*s.y,n=t.w*s.y+t.y*s.w+t.z*s.x-t.x*s.z,i=t.w*s.z+t.z*s.w+t.x*s.y-t.y*s.x;return f.create(r,n,i,e)}static scale(t,s){const e=t.x*s,r=t.y*s,n=t.z*s,i=t.w*s;return f.create(e,r,n,i)}static dot(t,s){return t.x*s.x+t.y*s.y+t.z*s.z+t.w*s.w}static conjugate(t){return f.create(-t.x,-t.y,-t.z,t.w)}static normalize(t){const s=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w);if(s==0)throw new Error("Zero length quaternion. Cannot normalize!!");const e=1/s;return f.scale(t,e)}static inverse(t){const s=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;if(s==0)throw new Error("Zero length quaternion. Cannot inverse!!");const e=1/s,r=f.conjugate(t);return f.scale(r,e)}static rotateVector(t,s){const e=f.toQuaternion(s),r=f.inverse(t),n=f.multiply(t,e),i=f.multiply(n,r);return new M(i.x,i.y,i.z)}static slerp(t,s,e){let r=f.dot(t,s);r<0&&(s=f.scale(s,-1),r*=-1);const n=Math.acos(r),i=a.sin(n);if(i==0){const o=f.scale(t,1-e),c=f.scale(s,e);return f.add(o,c)}else{const o=f.scale(t,a.sin(n*(1-e))/i),c=f.scale(s,a.sin(n*e)/i);return f.add(o,c)}}static toQuaternion(t){return f.create(t.x,t.y,t.z,0)}}class k{constructor(t,s,e,r){p(this,"components");this.components=new Float32Array([t,s,e,r])}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}get w(){return this.components[3]}toMatrix(){const t=new z;let s=t.identity();const e=f.rotateVector(this,E.AXIS2DX),r=f.rotateVector(this,E.AXIS2DY),n=f.rotateVector(this,E.AXIS2DZ);return s.set(0,0,e.x),s.set(0,1,e.y),s.set(0,2,e.z),s.set(0,0,r.x),s.set(0,1,r.y),s.set(0,2,r.z),s.set(0,0,n.x),s.set(0,1,n.y),s.set(0,2,n.z),t}toEuler(){const t=this.toMatrix(),s=Math.atan2(t.get(0,2),t.get(2,2)),e=Math.asin(-t.get(2,0)),r=Math.atan2(t.get(2,1),t.get(2,2));return{pitch:s,yaw:e,roll:r}}}class H{static identity22(){return new D().identity()}static identity33(){return new L().identity()}static identity44(){return new z().identity()}static add(t,s){if(!this.checkSizeEqual(t,s))throw new Error("Not Equal Matrix Dimension. Cannot Calculate!");const e=this.createMatrixInstance(t.size);return t.add(s,e),e}static sub(t,s){if(!this.checkSizeEqual(t,s))throw new Error("Not Equal Matrix Dimension. Cannot Calculate!");const e=this.createMatrixInstance(t.size);return t.sub(s,e),e}static multiply(t,s){const e=this.createMatrixInstance(t.size);if(s instanceof R){if(t.col!=s.row)throw new Error("Not Equal A Row Number and B Col Number. Cannot Multiply!");t.multiply(s,e)}else t.multiply(s,e);return e}static div(t,s){if(s==0)throw new Error("b is zero. Cannot Divide!");const e=this.createMatrixInstance(t.size);return t.div(s,e),e}static translate2D(t,s){return t.translate2D(s)}static translate3D(t,s){return t.translate3D(s)}static rotate2D(t,s){return t.rotate2D(s)}static rotate3D(t,s,e){return t.rotate3D(s,e)}static scale2D(t,s,e){return t.scale2D(s,e)}static scale3D(t,s,e,r){return t.scale3D(s,e,r)}static transpose(t){return t.transpose()}static inverse(t){return t.inverse()}static orthographic(t,s,e,r,n,i){let o=new z;return o=o.orthographic(t,s,e,r,n,i,o),o}static perspective(t,s,e,r,n){let i=new z;return i=i.perspective(t,s,e,r,n,i),i}static lookAt(t,s,e){let r=new z;return r=r.lookAt(t,s,e,r),r}static checkSizeEqual(t,s){return t.col!=s.col||t.row!=s.row?(console.log(`col: ${t.col},${s.col}`),console.log(`row: ${t.row},${s.row}`),!1):!0}static createMatrixInstance(t){const s=X[t];if(!s)throw new Error("Unsupport matrix size");return new s}}class B{constructor(t){p(this,"gl");this.gl=this.initializeWebGL2RenderingContext(t)}getWebGL2RenderingContext(){return this.gl}clearColor(t){this.gl.clearColor(t.red,t.green,t.blue,t.alpha),this.gl.clearDepth(1),this.gl.clear(this.gl.COLOR_BUFFER_BIT)}initializeWebGL2RenderingContext(t){const s=t.getContext("webgl2");if(s==null)throw new Error("Not Support WebGL2!!");return s}}const Y=Object.freeze(Object.defineProperty({__proto__:null,default:`#version 300 es

in vec3 aPosition;
uniform mat4 mvpMatrix;

void main(void){
    gl_Position = mvpMatrix * vec4(aPosition, 1.0);
}`},Symbol.toStringTag,{value:"Module"})),W=Object.freeze(Object.defineProperty({__proto__:null,default:`#version 300 es
precision highp float;

out vec4 outputColor;

void main(void){
    outputColor = vec4(1.0, 0.0, 0.0, 1.0);
}`},Symbol.toStringTag,{value:"Module"}));class q{constructor(t,s,e){p(this,"gl");p(this,"location");this.gl=t,this.location=t.getAttribLocation(s,e),this.location===-1&&console.error(`Failed to get the storage location of ${e}`)}setAttributeBuffer(t,s,e,r){this.location!==-1&&(this.gl.vertexAttribPointer(this.location,t,s,!1,e,r),this.gl.enableVertexAttribArray(this.location))}}class J{constructor(t,s,e){p(this,"gl");p(this,"location");this.gl=t,this.location=t.getUniformLocation(s,e),this.location===null&&console.error(`Failed to get the storage location of ${e}`)}setUniform(t,s){if(this.location!==null)switch(s){case"1f":this.gl.uniform1f(this.location,t);break;case"1fv":this.gl.uniform1fv(this.location,t);break;case"1i":this.gl.uniform1i(this.location,t);break;case"1iv":this.gl.uniform1iv(this.location,t);break;case"2f":this.gl.uniform2f(this.location,t,t);break;case"2fv":this.gl.uniform2fv(this.location,t);break;case"2i":this.gl.uniform2i(this.location,t,t);break;case"2iv":this.gl.uniform2iv(this.location,t);break;case"3f":this.gl.uniform3f(this.location,t,t,t);break;case"3fv":this.gl.uniform3fv(this.location,t);break;case"3i":this.gl.uniform3i(this.location,t,t,t);break;case"3iv":this.gl.uniform3iv(this.location,t);break;case"4f":this.gl.uniform4f(this.location,t,t,t,t);break;case"4fv":this.gl.uniform4fv(this.location,t);break;case"4i":this.gl.uniform4i(this.location,t,t,t,t);break;case"4iv":this.gl.uniform4iv(this.location,t);break;case"Matrix2fv":this.gl.uniformMatrix2fv(this.location,!1,t);break;case"Matrix3fv":this.gl.uniformMatrix3fv(this.location,!1,t);break;case"Matrix4fv":this.gl.uniformMatrix4fv(this.location,!1,t);break;default:throw new Error("Unknown uniform type!!")}}}class j{constructor(t,s,e){p(this,"gl");p(this,"program");p(this,"vertexShader");p(this,"fragmentShader");p(this,"attributes",new Map);p(this,"uniforms",new Map);this.gl=t,this.program=this.createProgram(s,e)}getProgram(){return this.program}getAttribute(t){return this.attributes.has(t)||this.attributes.set(t,new q(this.gl,this.program,t)),this.attributes.get(t)}setAttribute(t,s,e,r,n){this.getAttribute(t).setAttributeBuffer(s,e,r,n)}getUniform(t){return this.uniforms.has(t)||this.uniforms.set(t,new J(this.gl,this.program,t)),this.uniforms.get(t)}setUniform(t,s){this.getUniform(t).setUniform(s.getUniformValues(),s.getUniformType())}createProgram(t,s){const e=this.gl.createProgram();if(this.vertexShader=this.compileShader(t,"vert"),this.fragmentShader=this.compileShader(s,"frag"),this.gl.attachShader(e,this.vertexShader),this.gl.attachShader(e,this.fragmentShader),this.gl.linkProgram(e),this.gl.getProgramParameter(e,this.gl.LINK_STATUS))return this.gl.useProgram(e),console.log("Create program success!!"),e;throw alert(this.gl.getProgramInfoLog(e)),new Error("Cannot create program!!")}compileShader(t,s){let e=this.createShader(s);if(this.gl.shaderSource(e,t),this.gl.compileShader(e),!this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS))throw console.log(this.gl.getShaderInfoLog(e)),new Error("Cannot compile shader!!");return e}createShader(t){switch(t){case"vert":return this.gl.createShader(this.gl.VERTEX_SHADER);case"frag":return this.gl.createShader(this.gl.FRAGMENT_SHADER);default:throw new Error("Unknown type shader!!")}}}class Q{constructor(t){p(this,"gl");p(this,"commonProgramCache",new Map);p(this,"programKey",new Set);this.gl=t}async loadShaderFromPath(t,s){var o;const e=await this.loadShader(t),r=await this.loadShader(s);let n=(o=s.split("/").pop())==null?void 0:o.split(".").shift(),i=new j(this.gl,e,r);this.commonProgramCache.set(n,i),console.log("loadShaderFromPath done"),console.log(this.commonProgramCache)}async loadCommonShaders(){const t=Object.assign({"../src/webgl/shader/default.vert":Y}),s=Object.assign({"../src/webgl/shader/default.frag":W}),e=new Map,r=new Map;Object.entries(t).forEach(([n,i])=>{var h;const o=i.default,c=(h=n.split("/").pop())==null?void 0:h.split(".").shift();e.set(c,o),this.programKey.add(c)}),Object.entries(s).forEach(([n,i])=>{var h;const o=i.default,c=(h=n.split("/").pop())==null?void 0:h.split(".").shift();r.set(c,o),this.programKey.add(c)});for(const n of this.programKey){console.log(n);let i=e.get(n),o=r.get(n);if(!i||!o){console.warn(`Shader pair incomplete for key: ${n}`);continue}let c=new j(this.gl,i,o);this.commonProgramCache.set(n,c)}console.log("loadCommonShaders done"),console.log(this.commonProgramCache)}async loadShader(t){try{return await(await fetch(t)).text()}catch(s){throw console.error(s),new Error("Cannot load shader!!")}}}function _(){console.log("ライブラリが初期化されました")}u.Color=T,u.Color255=v,u.ColorUtility=G,u.DefaultColorConstants=Z,u.DefaultValueConstants=O,u.DefaultVectorConstants=E,u.MathUtility=a,u.Matrix=R,u.Matrix22=D,u.Matrix33=L,u.Matrix44=z,u.MatrixCalculator=H,u.MatrixClassAndSizePair=X,u.MyColorCode=$,u.MyColorConstants255=U,u.Quaternion=k,u.QuaternionCalculator=f,u.ShaderLoader=Q,u.TrigonometricConstants=I,u.Vector=N,u.Vector2=F,u.Vector3=M,u.Vector4=P,u.VectorCalculator=d,u.VectorClassAndSizePair=V,u.WebGLUtility=B,u.initializeLibrary=_,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
